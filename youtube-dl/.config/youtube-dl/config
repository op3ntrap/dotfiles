# Print this help text and exit
# -h, --help


# Print program version and exit
# --version


# Update  this program to latest version.  Make sure that you have suf‐
# ficient permissions (run with sudo if needed)
# -U, --update


# Continue on download errors, for example to skip  unavailable  videos
# in a playlist
# -i, --ignore-errors
--ignore-errors


# Abort  downloading  of further videos (in the playlist or the command
# line) if an error occurs
# --abort-on-error


# Display the current browser identification
# --dump-user-agent


# List all supported extractors
# --list-extractors


# Output descriptions of all supported extractors
# --extractor-descriptions


# Force extraction to use the generic extractor
# --force-generic-extractor


# Use this prefix for unqualified URLs.  For example "gvsearch2:" down‐
# loads  two  videos  from  google videos for youtube-dl "large apple".
# Use the value "auto" to let youtube-dl guess ("auto_warning" to  emit
# a warning when guessing).  "error" just throws an error.  The default
# value "fixup_error" repairs broken URLs, but emits an error  if  this
# is not possible instead of searching.
# --default-search PREFIX


# Do not read configuration files.  When given in the global configura‐
# tion file /etc/youtube-dl.conf: Do not read the user configuration in
# ~/.config/youtube- dl/config (%APPDATA%/youtube-dl/config.txt on Win‐
# dows)
# --ignore-config


# Location of the configuration file; either the path to the config  or
# its containing directory.
--config-location $HOME/.config/youtube-dl/config


# Do not extract the videos of a playlist, only list them.
# --flat-playlist


# Mark videos watched (YouTube only)
# --mark-watched


# Do not mark videos watched (YouTube only)
# --no-mark-watched


# Do not emit color codes in output
# --no-color


# Use  the  specified  HTTP/HTTPS/SOCKS  proxy.  To enable SOCKS proxy,
# specify a proper scheme.  For example socks5://127.0.0.1:1080/.  Pass
# in an empty string (--proxy "") for direct connection
# --proxy URL


# Time to wait before giving up, in seconds
# --socket-timeout SECONDS


# Client-side IP address to bind to
# --source-address IP


# Make all connections via IPv4
# -4, --force-ipv4
-4


# Make all connections via IPv6
# -6, --force-ipv6


# Use  this  proxy  to  verify  the  IP address for some geo-restricted
# sites.  The default proxy specified by --proxy (or none, if  the  op‐
# tion is not present) is used for the actual downloading.
# --geo-verification-proxy URL


# Bypass geographic restriction via faking X-Forwarded-For HTTP header
# --geo-bypass


# Do  not bypass geographic restriction via faking X-Forwarded-For HTTP
# header
# --no-geo-bypass


# Force bypass geographic restriction with explicitly provided two-let‐
# ter ISO 3166-2 country code
# --geo-bypass-country CODE


# Force bypass geographic restriction with explicitly provided IP block
# in CIDR notation
# --geo-bypass-ip-block IP_BLOCK


# Playlist video to start at (default is 1)
# --playlist-start NUMBER


# Playlist video to end at (default is last)
# --playlist-end NUMBER


# Playlist video items to download.  Specify indices of the  videos  in
# the  playlist separated by commas like: "--playlist-items 1,2,5,8" if
# you want to download videos indexed 1, 2, 5, 8 in the playlist.   You
# can  specify  range: "--playlist-items 1-3,7,10-13", it will download
# the videos at index 1, 2, 3, 7, 10, 11, 12 and 13.
# --playlist-items ITEM_SPEC


# Download only matching titles (regex or caseless sub-string)
# --match-title REGEX


# Skip download for matching titles (regex or caseless sub-string)
# --reject-title REGEX


# Abort after downloading NUMBER files
# --max-downloads NUMBER


# Do not download any videos smaller than SIZE (e.g.  50k or 44.6m)
# --min-filesize SIZE


# Do not download any videos larger than SIZE (e.g.  50k or 44.6m)
# --max-filesize SIZE


# Download only videos uploaded in this date
# --date DATE


# Download only videos uploaded on or before this  date  (i.e.   inclu‐
# sive)
# --datebefore DATE


# Download only videos uploaded on or after this date (i.e.  inclusive)
# --dateafter DATE


# Do not download any videos with less than COUNT views
# --min-views COUNT


# Do not download any videos with more than COUNT views
# --max-views COUNT


# Generic video filter.  Specify any key (see the "OUTPUT TEMPLATE" for
# a list of available keys) to match if the key  is  present,  !key  to
# check  if the key is not present, key > NUMBER (like "comment_count >
# 12", also works with >=, <, <=, !=, =) to compare against  a  number,
# key  = 'LITERAL' (like "uploader = 'Mike Smith'", also works with !=)
# to match against a string literal and & to require multiple  matches.
# Values  which  are  not  known are excluded unless you put a question
# mark (?) after the operator.  For example, to only match videos  that
# have  been  liked more than 100 times and disliked less than 50 times
# (or the dislike functionality is not available at the given service),
# but who also have a description, use --match-filter "like_count > 100
# & dislike_count <?  50 & description" .
# --match-filter FILTER


# Download only the video, if the URL refers to a video and a playlist.
# --no-playlist


# Download the playlist, if the URL refers to a video and a playlist.
--yes-playlist


# Download only videos suitable for the given age
# --age-limit YEARS


# Download only videos not listed in the archive file.  Record the  IDs
# of all downloaded videos in it.
# --download-archive FILE


# Download advertisements as well (experimental)
# --include-ads


# Maximum download rate in bytes per second (e.g.  50K or 4.2M)
# -r, --limit-rate RATE


# Number of retries (default is 10), or "infinite".
# -R, --retries RETRIES


# Number  of  retries  for  a  fragment  (default is 10), or "infinite"
# (DASH, hlsnative and ISM)
# --fragment-retries RETRIES


# Skip unavailable fragments (DASH, hlsnative and ISM)
# --skip-unavailable-fragments


# Abort downloading when some fragment is not available
# --abort-on-unavailable-fragment


# Keep downloaded fragments on  disk  after  downloading  is  finished;
# fragments are erased by default
# --keep-fragments


# Size of download buffer (e.g.  1024 or 16K) (default is 1024)
# --buffer-size SIZE


# Do  not automatically adjust the buffer size.  By default, the buffer
# size is automatically resized from an initial value of SIZE.
# --no-resize-buffer


# Size of a chunk for chunk-based HTTP downloading (e.g.   10485760  or
# 10M)  (default  is  disabled).  May be useful for bypassing bandwidth
# throttling imposed by a webserver (experimental)
# --http-chunk-size SIZE


# Download playlist videos in reverse order
# --playlist-reverse


# Download playlist videos in random order
# --playlist-random


# Set file xattribute ytdl.filesize with expected file size
# --xattr-set-filesize


# Use the native HLS downloader instead of ffmpeg
# --hls-prefer-native


# Use ffmpeg instead of the native HLS downloader
# --hls-prefer-ffmpeg


# Use the mpegts container for HLS videos, allowing to play  the  video
# while downloading (some players may not be able to play it)
# --hls-use-mpegts


# Use the specified external downloader.  Currently supports aria2c,av‐
# conv,axel,curl,ffmpeg,httpie,wget
--external-downloader aria2c


# Give these arguments to the external downloader
--external-downloader-args '-c -x 16 -k 2M'


# File containing URLs to download ('-' for stdin), one URL  per  line.
# Lines  starting  with  '#', ';' or ']' are considered as comments and
# ignored.
# -a, --batch-file FILE


# --id   Use only video ID in file name


# Output filename template, see the "OUTPUT TEMPLATE" for all the info
# -o, --output TEMPLATE


# Specify the start value for %(autonumber)s (default is 1)
# --autonumber-start NUMBER


# Restrict filenames to only ASCII characters, and avoid "&" and spaces
# in filenames
--restrict-filenames


# Do not overwrite files
# -w, --no-overwrites


# Force  resume  of partially downloaded files.  By default, youtube-dl
# will resume downloads if possible.
# -c, --continue


# Do not resume partially downloaded files (restart from beginning)
# --no-continue


# Do not use .part files - write directly into output file
# --no-part


# Do not use the Last-modified header to set the file modification time
# --no-mtime


# Write video description to a .description file
# --write-description


# Write video metadata to a .info.json file
# --write-info-json


# Write video annotations to a .annotations.xml file
# --write-annotations


# JSON  file  containing  the  video  information  (created  with   the
# "--write-info-json" option)
# --load-info-json FILE


# File to read cookies from and dump cookie jar in
# --cookies FILE


# Location in the filesystem where youtube-dl can store some downloaded
# information permanently.  By  default  $XDG_CACHE_HOME/youtube-dl  or
# ~/.cache/youtube-dl  .  At the moment, only YouTube player files (for
# videos with obfuscated signatures) are cached, but that may change.
# --cache-dir DIR


# Disable filesystem caching
# --no-cache-dir


# Delete all filesystem cache files
# --rm-cache-dir


# Write thumbnail image to disk
--write-thumbnail


# Write all thumbnail image formats to disk
--write-all-thumbnails


# Simulate and list all available thumbnail formats
# --list-thumbnails


# Activate quiet mode
# -q, --quiet


# Ignore warnings
# --no-warnings


# Do not download the video and do not write anything to disk
# -s, --simulate


# Do not download the video
# --skip-download


# Simulate, quiet but print URL
# -g, --get-url


# Simulate, quiet but print title
# -e, --get-title


# Simulate, quiet but print id
# --get-id


# Simulate, quiet but print thumbnail URL
# --get-thumbnail


# Simulate, quiet but print video description
# --get-description


# Simulate, quiet but print video length
# --get-duration


# Simulate, quiet but print output filename
# --get-filename


# Simulate, quiet but print output format
# --get-format


# Simulate, quiet but print JSON information.   See  the  "OUTPUT  TEM‐
# PLATE" for a description of available keys.
# -j, --dump-json


# Simulate,  quiet but print JSON information for each command-line ar‐
# gument.  If the URL refers to a playlist, dump the whole playlist in‐
# formation in a single line.
# -J, --dump-single-json


# Be  quiet and print the video information as JSON (video is still be‐
# ing downloaded).
# --print-json


# Output progress bar as new lines
# --newline


# Do not print progress bar
# --no-progress


# Display progress in console titlebar
# --console-title


# Print various debugging information
# -v, --verbose


# Print downloaded pages encoded using base64 to debug  problems  (very
# verbose)
# --dump-pages


# Write downloaded intermediary pages to files in the current directory
# to debug problems
# --write-pages


# Display sent and read HTTP traffic
# --print-traffic


# Contact the youtube-dl server for debugging
# -C, --call-home


# Do NOT contact the youtube-dl server for debugging
# --no-call-home


# Force the specified encoding (experimental)
# --encoding ENCODING


# Suppress HTTPS certificate validation
# --no-check-certificate


# Use an unencrypted  connection  to  retrieve  information  about  the
# video.  (Currently supported only for YouTube)
# --prefer-insecure


# Specify a custom user agent
# --user-agent UA


# Specify  a  custom  referer, use if the video access is restricted to
# one domain
# --referer URL


# Specify a custom HTTP header and its value, separated by a colon ':'.
# You can use this option multiple times
# --add-header FIELD:VALUE


# Work around terminals that lack bidirectional text support.  Requires
# bidiv or fribidi executable in PATH
# --bidi-workaround


# Number of seconds to sleep before each download when used alone or  a
# lower  bound  of  a  range  for randomized sleep before each download
# (minimum possible number of seconds to sleep) when  used  along  with
# --max-sleep-interval.
# --sleep-interval SECONDS


# Upper  bound  of  a  range  for randomized sleep before each download
# (maximum possible number of seconds to sleep).   Must  only  be  used
# along with --min-sleep-interval.
# --max-sleep-interval SECONDS


# Video format code, see the "FORMAT SELECTION" for all the info
# -f, --format FORMAT
-f bestaudio

# Download all available video formats
# --all-formats


# Prefer free video formats unless a specific one is requested
# --prefer-free-formats


# List all available formats of requested videos
# -F, --list-formats


# Do not download the DASH manifests and related data on YouTube videos
# --youtube-skip-dash-manifest


# If  a  merge is required (e.g.  bestvideo+bestaudio), output to given
# container format.  One of mkv, mp4, ogg, webm, flv.   Ignored  if  no
# merge is required
# --merge-output-format FORMAT


# Write subtitle file
# --write-sub


# Write automatically generated subtitle file (YouTube only)
# --write-auto-sub


# Download all the available subtitles of the video
# --all-subs


# List all available subtitles for the video
# --list-subs


# Subtitle  format,  accepts  formats preference, for example: "srt" or
# "ass/srt/best"
# --sub-format FORMAT


# Languages of the subtitles to download (optional) separated  by  com‐
# mas, use --list- subs for available language tags
# --sub-lang LANGS


# Login with this account ID
# -u, --username USERNAME


# Account  password.   If  this option is left out, youtube-dl will ask
# interactively.
# -p, --password PASSWORD


# Two-factor authentication code
# -2, --twofactor TWOFACTOR


# Use .netrc authentication data
# -n, --netrc


# Video password (vimeo, smotri, youku)
# --video-password PASSWORD


# Adobe Pass multiple-system operator  (TV  provider)  identifier,  use
# --ap-list-mso for a list of available MSOs
# --ap-mso MSO


# Multiple-system operator account login
# --ap-username USERNAME


# Multiple-system  operator  account  password.  If this option is left
# out, youtube-dl will ask interactively.
# --ap-password PASSWORD


# List all supported multiple-system operators
# --ap-list-mso

-x
# Convert video files to audio-only files (requires  ffmpeg  or  avconv
# and ffprobe or avprobe)
# -x, --extract-audio
--extract-audio


# Specify  audio  format:  "best", "aac", "flac", "mp3", "m4a", "opus",
# "vorbis", or "wav"; "best" by default; No effect without -x
--audio-format flac


# Specify ffmpeg/avconv audio quality, insert a value between  0  (bet‐
# ter)  and  9 (worse) for VBR or a specific bitrate like 128K (default
# 5)
--audio-quality 0


# Encode the video to another format if necessary (currently supported:
# mp4|flv|ogg|webm|mkv|avi)
# --recode-video FORMAT


# Give these arguments to the postprocessor
# --postprocessor-args ARGS


# Keep  the video file on disk after the post- processing; the video is
# erased by default
# -k, --keep-video


# Do not overwrite post-processed files; the post-processed  files  are
# overwritten by default
# --no-post-overwrites


# Embed subtitles in the video (only for mp4, webm and mkv videos)
# --embed-subs


# Embed thumbnail in the audio as cover art
--embed-thumbnail


# Write metadata to the video file
# --add-metadata


# Parse additional metadata like song title / artist from the video ti‐
# tle.  The format syntax is the same as --output.  Regular  expression
# with  named  capture  groups may also be used.  The parsed parameters
# replace existing values.  Example: --metadata-from- title "%(artist)s -  %(title)s"  matches  a  title like "Coldplay - Paradise".  Example
# (regex): --metadata-from-title "(?P.+?) - (?P.+)"
# --metadata-from-title FORMAT


# Write metadata to the video file's xattrs (using dublin core and  xdg
# standards)
# --xattrs


# Automatically  correct  known  faults  of the file.  One of never (do
# nothing), warn (only emit a warning),  detect_or_warn  (the  default;
# fix file if we can, warn otherwise)
# --fixup POLICY


# Prefer avconv over ffmpeg for running the postprocessors
# --prefer-avconv


# Prefer ffmpeg over avconv for running the postprocessors (default)
# --prefer-ffmpeg


# Location  of  the ffmpeg/avconv binary; either the path to the binary
# or its containing directory.
# --ffmpeg-location PATH


# Execute a command on the file after downloading,  similar  to  find's -exec syntax.  Example: --exec 'adb push {} /sdcard/Music/ && rm {}'
# --exec CMD


# Convert   the   subtitles   to  other  format  (currently  supported:
# srt|ass|vtt|lrc)
# --convert-subs FORMAT


